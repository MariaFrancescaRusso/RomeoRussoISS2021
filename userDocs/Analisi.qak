System StandingBuffetService

**Event 	 consult	: consult(state_room)	//from maitre**

Dispatch robotCmd	: robotCmd(X) 	 		//from maitre to robot 
Dispatch fail		: fail(m)			 	//from robot to maitre
Dispatch ask 		: ask(foodCode) 		//from robot to fridge
Dispatch answer 	: answer(Y)			 	//from fridge to robot
Dispatch expose		: expose(state)  		//from fridge to maitre

Context ctxRobotReq ip [host="localhost" port=8000] 

~//requirements: maitre interaction, prepare, add food, clear, stop, reactive ~
Qactor maitrereq context ctxRobotReq 	{/* Provides a user GUI; Forwards robotCmd to robotreq */}

~//requirements: move RBR avoiding abstacles, ask to fridge ~
Qactor robotreq context ctxRobotReq 	{/* Moves the robot and avoid obstacles; Handle robotCmd and answer; Forwards ask to fridgereq and fail to maitrereq */}

~//requirements: expose, answer~
Qactor fridgereq context ctxRobotReq 	{/* Handle ask and consult; Forwards answer to robotreq and expose to maitrereq */}
